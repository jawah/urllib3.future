name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions: "read-all"

concurrency:
  group: ci-${{ github.ref_name }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  package:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8"

      - name: "Setup Python"
        uses: "actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c"
        with:
          python-version: "3.x"
          cache: "pip"

      - name: "Check packages"
        run: |
          python -m pip install -U pip setuptools wheel build twine rstcheck
          python -m build
          rstcheck CHANGES.rst
          python -m twine check dist/*

  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12", "3.13", "3.14"]
        os:
          - macos-14-large
          - windows-2022
          - ubuntu-22.04
        nox-session: ['']
        include:
          - experimental: false
            traefik-server: true
          - traefik-server: false
            nox-session: test_ssl_large_resources-3.7
            python-version: "3.7"
            os: windows-2022
            experimental: false
          - traefik-server: false
            nox-session: test_ssl_large_resources-3.9
            python-version: "3.9"
            os: windows-2022
            experimental: false
          - traefik-server: false
            nox-session: test_ssl_large_resources-3.13
            python-version: "3.13"
            os: windows-2022
            experimental: false
          - traefik-server: false
            nox-session: test_ssl_large_resources-3.9
            python-version: "3.9"
            os: ubuntu-22.04
            experimental: false
          - traefik-server: false
            nox-session: test_ssl_large_resources-3.13
            python-version: "3.13"
            os: ubuntu-22.04
            experimental: false
          - python-version: "pypy-3.7"
            os: ubuntu-22.04
            experimental: false
            nox-session: test-pypy
          - python-version: "pypy-3.8"
            os: ubuntu-22.04
            experimental: false
            nox-session: test-pypy
            traefik-server: true
          - python-version: "pypy-3.9-v7.3.13"  # urllib3#3308
            os: ubuntu-22.04
            experimental: false
            nox-session: test-pypy
            traefik-server: true
          - python-version: "pypy-3.10"
            os: ubuntu-22.04
            experimental: false
            nox-session: test-pypy
            traefik-server: true
          - python-version: "pypy-3.11"
            os: ubuntu-22.04
            experimental: false
            nox-session: test-pypy
            traefik-server: true
          - python-version: "3.x"
            os: ubuntu-22.04
            experimental: false
            nox-session: test_brotlipy
          - traefik-server: false
            nox-session: test_pysocks-3.9
            python-version: "3.9"
            os: ubuntu-22.04
            experimental: false
          - traefik-server: false
            nox-session: test_pysocks-3.10
            python-version: "3.10"
            os: ubuntu-22.04
            experimental: false
        exclude:
          # Ubuntu 22.04 comes with OpenSSL 3.0, so only CPython 3.9+ is compatible with it
          # https://github.com/python/cpython/issues/83001
          - python-version: "3.7"
            os: ubuntu-22.04
          - python-version: "3.8"
            os: ubuntu-22.04
          - python-version: "3.7"
            os: macos-14-large

    runs-on: ${{ matrix.os }}
    name: ${{ fromJson('{"macos-14-large":"macOS","windows-2022":"Windows","ubuntu-22.04":"Ubuntu"}')[matrix.os] }} ${{ matrix.python-version }} ${{ matrix.nox-session }}
    continue-on-error: ${{ matrix.experimental }}
    timeout-minutes: 25
    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8"

      - name: "Traefik: Prerequisites - Colima (MacOS)"
        if: ${{ matrix.traefik-server && contains(matrix.os, 'mac') }}
        uses: douglascamata/setup-docker-macos-action@7fba8ca8a7fb07072847b4bac829ed7c677c600e
        with:
          colima-network-address: true

      - name: "Colima VM List (MacOS)"
        if: ${{ matrix.traefik-server && contains(matrix.os, 'mac') }}
        run: colima list

      - name: "Setup Python ${{ matrix.python-version }}"
        uses: "actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c"
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true

      - name: "Install dependencies"
        run: python -m pip install --upgrade pip setuptools nox

      - name: "Run tests"
        run: ./ci/run_tests.sh
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}
          NOX_SESSION: ${{ matrix.nox-session }}
          TRAEFIK_HTTPBIN_ENABLE: ${{ matrix.traefik-server }}
          # on MacOS, the Colima VM is located at "192.168.106.2" by default.
          TRAEFIK_HTTPBIN_IPV4: ${{ contains(matrix.os, 'mac') && '192.168.65.2' || '127.0.0.1' }}

      - name: "Upload artifact"
        uses: "actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1"
        with:
          name: coverage-data-${{ matrix.os }}-${{ matrix.nox-session }}-${{ matrix.python-version }}-${{ matrix.traefik-server }}
          path: ".coverage.*"
          include-hidden-files: true
          if-no-files-found: error

  coverage:
    if: always()
    runs-on: "ubuntu-latest"
    needs: test
    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8"

      - name: "Setup Python"
        uses: "actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c"
        with:
          python-version: "3.x"

      - name: "Install coverage"
        run: "python -m pip install --upgrade coverage"

      - name: "Download artifact"
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          pattern: coverage-data*
          merge-multiple: true

      - name: "Combine & check coverage"
        run: |
          python -m coverage combine
          python -m coverage html --skip-covered --skip-empty
          python -m coverage report --ignore-errors --show-missing --fail-under=86

      - name: "Upload report"
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1
        with:
          name: coverage-report
          path: htmlcov
